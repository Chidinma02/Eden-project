{"remainingRequest":"C:\\Users\\USER\\Downloads\\Eden-project-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\USER\\Downloads\\Eden-project-master\\src\\components\\HelloWorld.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\USER\\Downloads\\Eden-project-master\\src\\components\\HelloWorld.vue","mtime":1689590252966},{"path":"C:\\Users\\USER\\Downloads\\Eden-project-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689475867986},{"path":"C:\\Users\\USER\\Downloads\\Eden-project-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1689475868467},{"path":"C:\\Users\\USER\\Downloads\\Eden-project-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689475867986},{"path":"C:\\Users\\USER\\Downloads\\Eden-project-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1689475864969}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIGltcG9ydCBzdG9yZSBmcm9tICIuLi9zdG9yZSI7CmltcG9ydCBTZWFyY2ggZnJvbSAiLi9TZWFyY2gudnVlIjsKIGltcG9ydCBsb3phZCBmcm9tICJsb3phZCI7CiBpbXBvcnQgY2xvdWRpbmFyeSBmcm9tICdjbG91ZGluYXJ5LWNvcmUnOwoKLy8gaW1wb3J0IHsgbWFwU3RhdGUgfSBmcm9tICJ2dWV4IjsKZXhwb3J0IGRlZmF1bHQgewoKCiAgbWV0aG9kczogewogICAgYXBwbHlGaWx0ZXJzKGluZGV4KSB7CiAgICAgIGNvbnNvbGUubG9nKCJjaGkiKQogICAgICBjb25zb2xlLmxvZyhpbmRleCkKICAgICAgY29uc3QgY2xvdWRpbmFyeUluc3RhbmNlID0gbmV3IGNsb3VkaW5hcnkuQ2xvdWRpbmFyeSh7CiAgICAgICAgY2xvdWRfbmFtZTogJ2R1eWlvbXNkZicsIAogICAgICAgIGFwaV9rZXk6ICcxMzMxNDk3NTUxNTEzNzQnLAogICAgICAgIGFwaV9zZWNyZXQ6ICcqKioqKioqKioqKioqKioqKioqKioqKioqKionIAogICAgICB9KTsKICAgICAgY29uc3QgcG9zdElkID0gdGhpcy5wb3N0c1tpbmRleF0uaWQ7CiAgICAgIC8vIGNsb3VkaW5hcnkuY29uZmlnKGNsb3VkaW5hcnlDb25maWcpOwoKICAgICAgLy8gQXBwbHkgZmlsdGVycyBhbmQgcmV0cmlldmUgdHJhbnNmb3JtZWQgaW1hZ2UgVVJMCiAgICAgIGNvbnN0IHRyYW5zZm9ybWVkSW1hZ2VVcmwgPSBjbG91ZGluYXJ5SW5zdGFuY2UudXJsKHBvc3RJZCwgewogICAgICAgIHRyYW5zZm9ybWF0aW9uOiBbCiAgICAgICAgICB7IGVmZmVjdDogJ2NhcnRvb25pZnknIH0sCiAgICAgICAgICB7IGVmZmVjdDogJ2dyYXlzY2FsZScgfSwKICAgICAgICAgIHsgZWZmZWN0OiAnc2VwaWEnIH0KICAgICAgICBdCiAgICAgIH0pOwoKICAgICAgLy8gaW5kZXggPSB0cmFuc2Zvcm1lZEltYWdlVXJsOwogICAgICBjb25zb2xlLmxvZygiVHJhbnNmb3JtZWQgSW1hZ2UgVVJMOiIsIHRyYW5zZm9ybWVkSW1hZ2VVcmwpOwogICAKICAgICB9LAogICAKICB9LAoKICBuYW1lOiAiSGVsbG9Xb3JsZCIsCiAgY29tcG9uZW50czogewogICAgU2VhcmNoLAogIH0sCiAgcHJvcHM6IHsKICAgIG1zZzogU3RyaW5nLAogIH0sCgogIGNvbXB1dGVkOiB7CiAgICAvLyAuLi5tYXBTdGF0ZShbInBvc3RzIl0pLAogICAgbG9hZGluZygpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnMubG9hZGluZzsKICAgIH0sCiAgICBwb3N0cygpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnMucG9zdHM7CiAgICB9LAogIH0sCgogIC8vIGNvbXB1dGVkOiBtYXBHZXR0ZXJzKFsiYWxsVG9kb3MiXSksCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCJsb2FkUG9zdHMiKTsKICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICBjb25zdCBvYnNlcnZlciA9IGxvemFkKCcuaW1hZ2UnKTsKICAgICAgb2JzZXJ2ZXIub2JzZXJ2ZSgpOwogICAgfSwgMTAwMDAwMCk7CiAgfSwKfTsK"},{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HelloWorld.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"hello\">\n    <div class=\"container-fluid\">\n      <Search />\n      <!-- <h3>Dogs</h3> -->\n\n      <b-skeleton-wrapper :loading=\"$store.state.loading\">\n        <template #loading>\n          <b-skeleton-img width=\"50%\" height=\"50%\"> </b-skeleton-img>\n        </template>\n\n        <div class=\"\">\n          <div class=\"row\" v-if=\"!loading && posts.length >= 1\">\n\n            <div\n              v-for=\"post in posts\"\n              :key=\"post.id\"\n              class=\"col-sm-12 col-md-4 col-lg-2\"\n              \n            >\n              <router-link\n                :to=\"{\n                  name: 'details',\n                  params: { id: post.id, breed: post.breed },\n                }\"\n              >\n              <div class=\"image-container\">\n  <!-- Loop through the images from the Dog API and display them -->\n  <div>\n \n  <img v-bind:src=\"post.link\" class=\"image\" v-lazy=\"post.link\"  v-image-lazy  />\n</div>\n</div>\n\n                 <!-- <img v-bind:src=\"post.link\" class=\"img-fluid img-cls mb-5\" />  -->\n                 <!-- <b-img v-bind:src=\"post.link\" fluid alt=\"Fluid image\"></b-img> -->\n                \n              </router-link>\n              <button class=\"btn pl-3 pr-3 btn-success mt-3 mb-3\"  @click=\"applyFilters\">Apply Filters</button>  \n            </div>\n\n            <div\n              v-for=\"(post,index) in posts\"\n              :key=\"post.id\"\n              class=\"col-sm-12 col-md-4 col-lg-2\"\n            >\n              <router-link\n                :to=\"{\n                  name: 'details',\n                  params: { id: post.id, breed: post.breed },\n                }\"\n              >\n              <img v-bind:src=\"post.link\" class=\"image\"  />\n                 <!-- <img v-bind:src=\"post.link\" class=\"img-fluid img-cls mb-5\" />  -->\n                 <!-- <b-img v-bind:src=\"post.link\" fluid alt=\"Fluid image\"></b-img> -->\n                 \n              </router-link>\n              <button class=\"btn pl-3 pr-3 btn-success mt-3 mb-3\"  @click=\"applyFilters(index)\">Apply Filters</button>\n            </div>\n          </div>\n          <div v-else>\n            <h4 class=\"mt-5\">\n              ......ooppps,The name of dog you entered is not available,search\n              again\n            </h4>\n          </div>\n          <!-- <div v-else> -->\n          <!-- <h1>loading....................</h1> -->\n          <!-- <b-skeleton></b-skeleton> -->\n          <!-- <b-skeleton-img></b-skeleton-img> -->\n          <!-- </div> -->\n        </div>\n      </b-skeleton-wrapper>\n    </div>\n  </div>\n</template>\n\n<script>\n// import store from \"../store\";\nimport Search from \"./Search.vue\";\n import lozad from \"lozad\";\n import cloudinary from 'cloudinary-core';\n\n// import { mapState } from \"vuex\";\nexport default {\n\n\n  methods: {\n    applyFilters(index) {\n      console.log(\"chi\")\n      console.log(index)\n      const cloudinaryInstance = new cloudinary.Cloudinary({\n        cloud_name: 'duyiomsdf', \n        api_key: '133149755151374',\n        api_secret: '***************************' \n      });\n      const postId = this.posts[index].id;\n      // cloudinary.config(cloudinaryConfig);\n\n      // Apply filters and retrieve transformed image URL\n      const transformedImageUrl = cloudinaryInstance.url(postId, {\n        transformation: [\n          { effect: 'cartoonify' },\n          { effect: 'grayscale' },\n          { effect: 'sepia' }\n        ]\n      });\n\n      // index = transformedImageUrl;\n      console.log(\"Transformed Image URL:\", transformedImageUrl);\n   \n     },\n   \n  },\n\n  name: \"HelloWorld\",\n  components: {\n    Search,\n  },\n  props: {\n    msg: String,\n  },\n\n  computed: {\n    // ...mapState([\"posts\"]),\n    loading() {\n      return this.$store.getters.loading;\n    },\n    posts() {\n      return this.$store.getters.posts;\n    },\n  },\n\n  // computed: mapGetters([\"allTodos\"]),\n  mounted() {\n    this.$store.dispatch(\"loadPosts\");\n    setTimeout(() => {\n      const observer = lozad('.image');\n      observer.observe();\n    }, 1000000);\n  },\n};\n</script>\n\n<style scoped>\n* {\n  margin: 0px !important;\n  padding: 0px !important;\n}\n\n.img-cls {\n  height: 75vh;\n  border-radius: 10px;\n}\n\nimage-container {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n  }\n\n  .image {\n    width: 200px;\n    height: 200px;\n    object-fit: cover;\n    margin: 10px;\n     background-color: lightgray;\n  }\n</style>"]}]}